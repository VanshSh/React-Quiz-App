{"version":3,"sources":["App.js","index.js"],"names":["App","currentIndex","setCurrentIndex","useState","questions","questionText","answerOptions","answerText","isCorrect","quizFinished","setQuizFinished","score","setScore","className","length","map","answer","onClick","preValue","value","ReactDOM","render","document","getElementById"],"mappings":"oJAEe,SAASA,IAEtB,MAAOC,EAAcC,GAAmBC,mBAAS,GAE3CC,EAAY,CAChB,CACEC,aAAc,iCACdC,cAAe,CACb,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAGvC,CACEH,aAAc,uBACdC,cAAe,CACb,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAG3C,CACEH,aAAc,2CACdC,cAAe,CACb,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAG1C,CACEH,aAAc,yCACdC,cAAe,CACb,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAgBpC,MAAOC,EAAcC,GAAmBP,oBAAS,IAE1CQ,EAAOC,GAAYT,mBAAS,GAEnC,OACE,qBAAKU,UAAU,MAAf,SACGJ,EAEC,sBAAKI,UAAU,gBAAf,wBACcF,EADd,WAC6BP,EAAUU,UAGvC,qCACE,sBAAKD,UAAU,mBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,6CAAgBZ,EAAe,KADjC,IAC4CG,EAAUU,UAEtD,qBAAKD,UAAU,gBAAf,SACGT,EAAUH,GAAcI,kBAG7B,qBAAKQ,UAAU,iBAAf,SACGT,EAAUH,GAAcK,cAAcS,KAAKC,GAExC,wBACEC,QAAS,KAAwBD,EAAOR,WAlCpDI,GAAUM,GAAaA,EAAW,SAEhCjB,IAAiBG,EAAUU,OAAS,EACtCJ,GAAgB,GAEhBR,GAAiBiB,GAAUA,EAAQ,MA4BzB,SAIGH,EAAOT,YAFHS,EAAOT,qB,KC7E9Ba,IAASC,OAAQ,cAACrB,EAAD,IAASsB,SAASC,eAAe,U","file":"static/js/main.8c811863.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function App() {\n  \n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const questions = [\n    {\n      questionText: \"What is the capital of France?\",\n      answerOptions: [\n        { answerText: \"New York\", isCorrect: false },\n        { answerText: \"London\", isCorrect: false },\n        { answerText: \"Paris\", isCorrect: true },\n        { answerText: \"Dublin\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"Who is CEO of Tesla?\",\n      answerOptions: [\n        { answerText: \"Jeff Bezos\", isCorrect: false },\n        { answerText: \"Elon Musk\", isCorrect: true },\n        { answerText: \"Bill Gates\", isCorrect: false },\n        { answerText: \"Tony Stark\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"The iPhone was created by which company?\",\n      answerOptions: [\n        { answerText: \"Apple\", isCorrect: true },\n        { answerText: \"Intel\", isCorrect: false },\n        { answerText: \"Amazon\", isCorrect: false },\n        { answerText: \"Microsoft\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"How many Harry Potter books are there?\",\n      answerOptions: [\n        { answerText: \"1\", isCorrect: false },\n        { answerText: \"4\", isCorrect: false },\n        { answerText: \"6\", isCorrect: false },\n        { answerText: \"7\", isCorrect: true }\n      ]\n    }\n  ];\n\n  function handleAnswerClick(isCorrect) {\n    if (isCorrect) {\n      setScore((preValue) => preValue + 1);\n    }\n    if (currentIndex === questions.length - 1) {\n      setQuizFinished(true);\n    } else {\n      setCurrentIndex((value) => value + 1);\n    }\n  }\n\n  const [quizFinished, setQuizFinished] = useState(false);\n\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className=\"app\">\n      {quizFinished ? (\n        /* Change this hardcoded 1 to state variable score else */\n        <div className=\"score-section\">\n          You scored {score} out of {questions.length}\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentIndex + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">\n              {questions[currentIndex].questionText}\n            </div>\n          </div>\n          <div className=\"answer-section\">\n            {questions[currentIndex].answerOptions.map((answer) => {\n              return (\n                <button\n                  onClick={() => handleAnswerClick(answer.isCorrect)}\n                  key={answer.answerText}\n                >\n                  {answer.answerText}\n                </button>\n              );\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render((<App />),document.getElementById('root'))\n\n\n"],"sourceRoot":""}